{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","usersFromServer","find","userId","App","useState","visibleTodos","setTodos","todoTitle","setTodoTitle","selectedUser","setSelectedUser","isTitleError","setIsTitleError","isUserError","setIsUserError","handleChange","event","target","value","Error","action","method","onSubmit","preventDefault","trimmedTitle","trim","newTodo","Math","max","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,uBCpDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKF,OAA7C,SACGE,EAAKJ,QCFCO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCT,EAIES,EAJFT,GACAU,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAN,EACEI,EADFJ,KAGF,OACE,0BACE,UAASL,EACTM,UAAWM,IAAW,WAAY,CAChC,sBAAuBD,IAH3B,UAME,oBAAIL,UAAU,kBAAd,SAAiCI,IAEhCL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCjBlBQ,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKT,UCDxC,SAASgB,EAAYhB,GACnB,OAAOiB,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOA,MAAO,KAGzD,IAAMc,ECfS,CACb,CACEd,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEnB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEnB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXQ,OAAQ,IDF0BJ,KAAI,SAAAN,GAAI,kCACzCA,GADyC,IAE5CJ,KAAMW,EAAYP,EAAKU,aAGZC,EAAgB,WAC3B,MAAiCC,mBAASP,GAA1C,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwCJ,mBAAsB,MAA9D,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAEMC,EAAe,SAACC,GACpB,MAAsBA,EAAMC,OAApBlC,EAAR,EAAQA,GAAImC,EAAZ,EAAYA,MAEZ,OAAQnC,GACN,IAAK,iBACH6B,GAAgB,GAChBJ,EAAaU,GACb,MAEF,IAAK,iBACHJ,GAAe,GACfJ,EAAgBX,GAAcmB,IAC9B,MAEF,QACE,MAAM,IAAIC,MAAM,uBAmCtB,OACE,sBAAK9B,UAAU,MAAf,UACE,+CAEA,uBACE+B,OAAO,aACPC,OAAO,OACPC,SAtCY,SAACN,GACjBA,EAAMO,iBACN,IAAMC,EAAejB,EAAUkB,OAU/B,GARKD,GACHZ,GAAgB,GAGbH,GACHK,GAAe,GAGZU,GAAiBf,EAAtB,CAIA,IAEMiB,EAAgB,CACpB3C,GAHgB4C,KAAKC,IAAL,MAAAD,KAAI,YAAQtB,EAAaP,KAAI,SAAAN,GAAI,OAAIA,EAAKT,QAAO,EAIjEmB,OAAQO,EAAa1B,GACrBU,MAAOc,EACPb,WAAW,EACXN,KAAMqB,GAGRH,EAAS,GAAD,mBAAKD,GAAL,CAAmBqB,KAC3BhB,EAAgB,MAChBF,EAAa,MAOX,UAKE,sBAAKnB,UAAU,QAAf,UACE,uBAAOwC,QAAQ,iBAAf,oBAIA,uBACE9C,GAAG,iBACH+C,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZb,MAAOX,EACPyB,SAAUjB,IAGXJ,GACC,sBAAMtB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOwC,QAAQ,iBAAf,mBAIA,yBACE9C,GAAG,iBACH,UAAQ,aACRmC,OAAmB,OAAZT,QAAY,IAAZA,OAAA,EAAAA,EAAc1B,KAAM,EAC3BiD,SAAUjB,EAJZ,UAME,wBAAQG,MAAM,IAAIe,UAAQ,EAA1B,2BAICjC,EAAgBF,KAAI,SAAAV,GAAI,OACvB,wBAAQ8B,MAAO9B,EAAKL,GAApB,SACGK,EAAKJ,MADqBI,EAAKL,UAMrC8B,GACC,sBAAMxB,UAAU,QAAhB,qCAIJ,wBAAQyC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUjC,MAAOQ,QEtIvB6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d123a27e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { Element } from './types/Element';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(id: number): User | null {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setTodos] = useState(todos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<Element>) => {\n    const { id, value } = event.target;\n\n    switch (id) {\n      case 'titleInputForm':\n        setIsTitleError(false);\n        setTodoTitle(value);\n        break;\n\n      case 'userSelectForm':\n        setIsUserError(false);\n        setSelectedUser(getUserById(+(value)));\n        break;\n\n      default:\n        throw new Error('Unknown form type');\n    }\n  };\n\n  const handleAdd = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const trimmedTitle = todoTitle.trim();\n\n    if (!trimmedTitle) {\n      setIsTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setIsUserError(true);\n    }\n\n    if (!trimmedTitle || !selectedUser) {\n      return;\n    }\n\n    const newTodoId = Math.max(...visibleTodos.map(todo => todo.id)) + 1;\n\n    const newTodo: Todo = {\n      id: newTodoId,\n      userId: selectedUser.id,\n      title: todoTitle,\n      completed: false,\n      user: selectedUser,\n    };\n\n    setTodos([...visibleTodos, newTodo]);\n    setSelectedUser(null);\n    setTodoTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAdd}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInputForm\">\n            Title:\n          </label>\n\n          <input\n            id=\"titleInputForm\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleChange}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelectForm\">\n            User:\n          </label>\n\n          <select\n            id=\"userSelectForm\"\n            data-cy=\"userSelect\"\n            value={selectedUser?.id || 0}\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}